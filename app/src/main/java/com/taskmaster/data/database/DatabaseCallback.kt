package com.taskmaster.data.database

import android.content.Context
import androidx.room.RoomDatabase
import androidx.sqlite.db.SupportSQLiteDatabase
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch
import java.util.Date

class DatabaseCallback(private val context: Context) : RoomDatabase.Callback() {

    override fun onCreate(db: SupportSQLiteDatabase) {
        super.onCreate(db)
        CoroutineScope(Dispatchers.IO).launch {
            populateDatabase()
        }
    }

    private suspend fun populateDatabase() {
        val database = TaskMasterDatabase.getDatabase(context)

        try {
            // Insert default user first
            val defaultUser = com.taskmaster.data.entity.User(
                username = "taskmaster_user",
                name = "–ò–≥—Ä–æ–∫ TaskMaster",
                city = "–ú–æ—Å–∫–≤–∞",
                totalXp = 0,
                level = 1,
                currentStreak = 0,
                maxStreak = 0,
                isCurrentUser = true,
                createdAt = Date()
            )
            val userId = database.userDao().insertUser(defaultUser)

            // Insert default spheres
            val spheres = listOf(
                com.taskmaster.data.entity.Sphere(name = "üèãÔ∏è –°–ø–æ—Ä—Ç", color = "#4CAF50", icon = "fitness", order = 0),
                com.taskmaster.data.entity.Sphere(name = "üìö –û–±—É—á–µ–Ω–∏–µ", color = "#2196F3", icon = "education", order = 1),
                com.taskmaster.data.entity.Sphere(name = "üíº –†–∞–±–æ—Ç–∞", color = "#9C27B0", icon = "work", order = 2),
                com.taskmaster.data.entity.Sphere(name = "üè† –ë—ã—Ç", color = "#FF9800", icon = "home", order = 3),
                com.taskmaster.data.entity.Sphere(name = "‚ù§Ô∏è –°–µ–º—å—è", color = "#E91E63", icon = "family", order = 4)
            )
            database.sphereDao().insertSpheres(spheres)

            // Insert default achievements
            val achievements = listOf(
                com.taskmaster.data.entity.Achievement(
                    title = "üöÄ –ü–µ—Ä–≤—ã–µ —à–∞–≥–∏",
                    description = "–í—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–µ—Ä–≤—É—é –∑–∞–¥–∞—á—É",
                    icon = "üöÄ",
                    type = "tasks",
                    requirement = 1,
                    currentProgress = 0
                ),
                com.taskmaster.data.entity.Achievement(
                    title = "üí™ –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
                    description = "–í—ã–ø–æ–ª–Ω–∏—Ç–µ 10 –∑–∞–¥–∞—á",
                    icon = "üí™",
                    type = "tasks",
                    requirement = 10,
                    currentProgress = 0
                ),
                com.taskmaster.data.entity.Achievement(
                    title = "üî• –ù–µ–¥–µ–ª—å–Ω—ã–π streak",
                    description = "–í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞—á–∏ 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥",
                    icon = "üî•",
                    type = "streak",
                    requirement = 7,
                    currentProgress = 0
                ),
                com.taskmaster.data.entity.Achievement(
                    title = "‚≠ê –ú–∞—Å—Ç–µ—Ä —É—Ä–æ–≤–Ω—è",
                    description = "–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 500 XP",
                    icon = "‚≠ê",
                    type = "xp",
                    requirement = 500,
                    currentProgress = 0
                )
            )
            database.achievementDao().insertAchievements(achievements)

        } catch (e: Exception) {
            e.printStackTrace()
        }
    }
}